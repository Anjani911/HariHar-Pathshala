import React, { useState } from 'react';
import {
  View,
  Text,
  TextInput,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  Alert,
  Dimensions,
} from 'react-native';

const { width } = Dimensions.get('window');

interface CRCLoginScreenProps {
  onBack: () => void;
  onLogin: () => void;
}

const CRCLoginScreen: React.FC<CRCLoginScreenProps> = ({ onBack, onLogin }) => {
  const [formData, setFormData] = useState({
    crcId: '',
    name: '',
    phone: '',
    email: '',
    cluster: '',
  });

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value,
    }));
  };

  const handleLogin = () => {
    if (!formData.crcId || !formData.name || !formData.phone || !formData.cluster) {
      Alert.alert('рддреНрд░реБрдЯрд┐', 'рдХреГрдкрдпрд╛ рд╕рднреА рдЖрд╡рд╢реНрдпрдХ рдлрд╝реАрд▓реНрдб рднрд░реЗрдВ');
      return;
    }

    if (formData.phone.length !== 10) {
      Alert.alert('рддреНрд░реБрдЯрд┐', 'рдХреГрдкрдпрд╛ рд╕рд╣реА рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рдбрд╛рд▓реЗрдВ (10 рдЕрдВрдХ)');
      return;
    }

    Alert.alert(
      'CRC рд▓реЙрдЧрд┐рди рд╕рдлрд▓',
      `рд╕реНрд╡рд╛рдЧрдд рд╣реИ ${formData.name}!\nCRC ID: ${formData.crcId}\nрдХреНрд▓рд╕реНрдЯрд░: ${formData.cluster}`,
      [{ text: 'рдбреИрд╢рдмреЛрд░реНрдб рдЬрд╛рдПрдВ', onPress: onLogin }]
    );
  };

  const clusterExamples = [
    'рд░рд╛рдпрдкреБрд░ рдХреНрд▓рд╕реНрдЯрд░-1 (10 рд╕реНрдХреВрд▓)',
    'рд░рд╛рдпрдкреБрд░ рдХреНрд▓рд╕реНрдЯрд░-2 (8 рд╕реНрдХреВрд▓)',
    'рд░рд╛рдпрдкреБрд░ рдХреНрд▓рд╕реНрдЯрд░-3 (12 рд╕реНрдХреВрд▓)',
    'рд░рд╛рдпрдкреБрд░ рдХреНрд▓рд╕реНрдЯрд░-4 (9 рд╕реНрдХреВрд▓)',
  ];

  return (
    <View style={styles.container}>
      <View style={styles.header}>
        <TouchableOpacity style={styles.backButton} onPress={onBack}>
          <Text style={styles.backButtonText}>тЖР рд╡рд╛рдкрд╕</Text>
        </TouchableOpacity>
        <Text style={styles.logo}>ЁЯСитАНЁЯТ╝</Text>
        <Text style={styles.title}>CRC рд▓реЙрдЧрд┐рди</Text>
        <Text style={styles.subtitle}>Cluster Resource Coordinator</Text>
      </View>

      <ScrollView style={styles.formContainer} showsVerticalScrollIndicator={false}>
        <View style={styles.welcomeCard}>
          <Text style={styles.welcomeTitle}>рдХреНрд▓рд╕реНрдЯрд░ рд░рд┐рд╕реЛрд░реНрд╕ рдХреЛрдСрд░реНрдбрд┐рдиреЗрдЯрд░</Text>
          <Text style={styles.welcomeText}>
            рдЕрдкрдиреЗ рдХреНрд▓рд╕реНрдЯрд░ рдХреЗ рд╕реНрдХреВрд▓реЛрдВ рдХреА рдирд┐рдЧрд░рд╛рдиреА рдФрд░ рд░рд┐рдкреЛрд░реНрдЯрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ
          </Text>
        </View>

        {/* CRC ID */}
        <View style={styles.inputContainer}>
          <Text style={styles.label}>CRC рдЖрдИрдбреА * (Employee ID)</Text>
          <TextInput
            style={styles.input}
            placeholder="рдЬреИрд╕реЗ: CRC/RAI/001"
            value={formData.crcId}
            onChangeText={(value) => handleInputChange('crcId', value)}
            autoCapitalize="characters"
          />
        </View>

        {/* Name */}
        <View style={styles.inputContainer}>
          <Text style={styles.label}>CRC рдХрд╛ рдирд╛рдо *</Text>
          <TextInput
            style={styles.input}
            placeholder="рдкреВрд░рд╛ рдирд╛рдо рдбрд╛рд▓реЗрдВ"
            value={formData.name}
            onChangeText={(value) => handleInputChange('name', value)}
          />
        </View>

        {/* Phone Number */}
        <View style={styles.inputContainer}>
          <Text style={styles.label}>рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ *</Text>
          <TextInput
            style={styles.input}
            placeholder="10 рдЕрдВрдХреЛрдВ рдХрд╛ рдирдВрдмрд░"
            value={formData.phone}
            onChangeText={(value) => handleInputChange('phone', value)}
            keyboardType="phone-pad"
            maxLength={10}
          />
        </View>

        {/* Email */}
        <View style={styles.inputContainer}>
          <Text style={styles.label}>рдИрдореЗрд▓ рдЖрдИрдбреА (рд╡реИрдХрд▓реНрдкрд┐рдХ)</Text>
          <TextInput
            style={styles.input}
            placeholder="crc@education.cg.gov.in"
            value={formData.email}
            onChangeText={(value) => handleInputChange('email', value)}
            keyboardType="email-address"
            autoCapitalize="none"
          />
        </View>

        {/* Cluster */}
        <View style={styles.inputContainer}>
          <Text style={styles.label}>рдХреНрд▓рд╕реНрдЯрд░ рдХрд╛ рдирд╛рдо *</Text>
          <TextInput
            style={styles.input}
            placeholder="рдЬреИрд╕реЗ: рд░рд╛рдпрдкреБрд░ рдХреНрд▓рд╕реНрдЯрд░-1"
            value={formData.cluster}
            onChangeText={(value) => handleInputChange('cluster', value)}
          />
        </View>

        {/* Cluster Examples */}
        <View style={styles.infoCard}>
          <Text style={styles.infoTitle}>рдХреНрд▓рд╕реНрдЯрд░ рдЙрджрд╛рд╣рд░рдг</Text>
          {clusterExamples.map((cluster, index) => (
            <TouchableOpacity 
              key={index} 
              style={styles.infoItem}
              onPress={() => handleInputChange('cluster', cluster.split(' (')[0])}
            >
              <Text style={styles.infoBullet}>тАв</Text>
              <Text style={styles.infoText}>{cluster}</Text>
            </TouchableOpacity>
          ))}
        </View>

        {/* Login Button */}
        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>
          <Text style={styles.loginButtonText}>CRC рдбреИрд╢рдмреЛрд░реНрдб рдореЗрдВ рдЬрд╛рдПрдВ ЁЯЪА</Text>
        </TouchableOpacity>

        {/* CRC Responsibilities */}
        <View style={styles.responsibilitiesCard}>
          <Text style={styles.responsibilitiesTitle}>ЁЯУЛ CRC рдХреА рдЬрд┐рдореНрдореЗрджрд╛рд░рд┐рдпрд╛рдВ</Text>
          <View style={styles.responsibilityItem}>
            <Text style={styles.responsibilityIcon}>ЁЯПл</Text>
            <Text style={styles.responsibilityText}>рдХреНрд▓рд╕реНрдЯрд░ рдХреЗ рд╕рднреА рд╕реНрдХреВрд▓реЛрдВ рдХреА рдореЙрдирд┐рдЯрд░рд┐рдВрдЧ</Text>
          </View>
          <View style={styles.responsibilityItem}>
            <Text style={styles.responsibilityIcon}>ЁЯУК</Text>
            <Text style={styles.responsibilityText}>рдорд╛рд╕рд┐рдХ рдкреНрд░рдЧрддрд┐ рд░рд┐рдкреЛрд░реНрдЯ рддреИрдпрд╛рд░ рдХрд░рдирд╛</Text>
          </View>
          <View style={styles.responsibilityItem}>
            <Text style={styles.responsibilityIcon}>ЁЯСитАНЁЯПл</Text>
            <Text style={styles.responsibilityText}>рд╢рд┐рдХреНрд╖рдХреЛрдВ рдХреЛ рддрдХрдиреАрдХреА рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рджрд╛рди рдХрд░рдирд╛</Text>
          </View>
          <View style={styles.responsibilityItem}>
            <Text style={styles.responsibilityIcon}>ЁЯУИ</Text>
            <Text style={styles.responsibilityText}>рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдХреА рдкреНрд░рдЧрддрд┐ рджреЗрдЦрдирд╛</Text>
          </View>
        </View>

        {/* Help Section */}
        <View style={styles.helpSection}>
          <Text style={styles.helpTitle}>рд╕рд╣рд╛рдпрддрд╛ рдЪрд╛рд╣рд┐рдП?</Text>
          
          <TouchableOpacity 
            style={styles.helpButton}
            onPress={() => Alert.alert('рд╕рд╣рд╛рдпрддрд╛', 'CRC ID рдЕрдкрдиреЗ BEO рд╕реЗ рдкреВрдЫреЗрдВ')}
          >
            <Text style={styles.helpEmoji}>тЭУ</Text>
            <Text style={styles.helpText}>CRC ID рдХреИрд╕реЗ рдкрддрд╛ рдХрд░реЗрдВ?</Text>
          </TouchableOpacity>
          
          <TouchableOpacity 
            style={styles.helpButton}
            onPress={() => Alert.alert('рд╡реАрдбрд┐рдпреЛ рд╕рд╣рд╛рдпрддрд╛', 'CRC рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реЗрд╖ рдкреНрд░рд╢рд┐рдХреНрд╖рдг рд╡реАрдбрд┐рдпреЛ')}
          >
            <Text style={styles.helpEmoji}>ЁЯОе</Text>
            <Text style={styles.helpText}>CRC рдкреНрд░рд╢рд┐рдХреНрд╖рдг рд╡реАрдбрд┐рдпреЛ</Text>
          </TouchableOpacity>
          
          <TouchableOpacity 
            style={styles.helpButton}
            onPress={() => Alert.alert('рд╕рдВрдкрд░реНрдХ', 'BEO рдХрд╛рд░реНрдпрд╛рд▓рдп рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ')}
          >
            <Text style={styles.helpEmoji}>ЁЯУЮ</Text>
            <Text style={styles.helpText}>BEO рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ</Text>
          </TouchableOpacity>
        </View>

        {/* Footer */}
        <View style={styles.footer}>
          <Text style={styles.footerText}>
            рд░рд╛рдпрдкреБрд░ рдЬрд┐рд▓рд╛ рд╢рд┐рдХреНрд╖рд╛ рд╡рд┐рднрд╛рдЧ рджреНрд╡рд╛рд░рд╛ рд╕рдВрдЪрд╛рд▓рд┐рдд
          </Text>
          <Text style={styles.footerSubText}>
            CRC рдкреЛрд░реНрдЯрд▓ - рдЫрддреНрддреАрд╕рдЧрдврд╝ рд╕рд░рдХрд╛рд░
          </Text>
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#E3F2FD',
  },
  header: {
    backgroundColor: '#1976D2',
    paddingTop: 60,
    paddingBottom: 30,
    paddingHorizontal: 20,
    alignItems: 'center',
  },
  backButton: {
    position: 'absolute',
    top: 70,
    left: 20,
    backgroundColor: 'rgba(255,255,255,0.2)',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
  },
  backButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: '600',
  },
  logo: {
    fontSize: 50,
    marginBottom: 10,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    color: 'white',
    textAlign: 'center',
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 16,
    color: 'white',
    textAlign: 'center',
    opacity: 0.9,
  },
  formContainer: {
    flex: 1,
    paddingHorizontal: 20,
    paddingTop: 20,
  },
  welcomeCard: {
    backgroundColor: 'white',
    padding: 20,
    borderRadius: 16,
    marginBottom: 20,
    elevation: 3,
  },
  welcomeTitle: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#1976D2',
    marginBottom: 8,
    textAlign: 'center',
  },
  welcomeText: {
    fontSize: 14,
    color: '#1565C0',
    textAlign: 'center',
    lineHeight: 20,
  },
  inputContainer: {
    marginBottom: 16,
  },
  label: {
    fontSize: 16,
    fontWeight: '600',
    color: '#1976D2',
    marginBottom: 8,
  },
  input: {
    backgroundColor: 'white',
    borderWidth: 2,
    borderColor: '#BBDEFB',
    borderRadius: 12,
    padding: 16,
    fontSize: 16,
    color: '#1976D2',
  },
  infoCard: {
    backgroundColor: 'white',
    padding: 16,
    borderRadius: 12,
    marginBottom: 20,
    elevation: 2,
  },
  infoTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1976D2',
    marginBottom: 12,
  },
  infoItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 8,
    paddingVertical: 4,
  },
  infoBullet: {
    fontSize: 16,
    color: '#1565C0',
    marginRight: 8,
  },
  infoText: {
    fontSize: 14,
    color: '#1565C0',
    flex: 1,
  },
  loginButton: {
    backgroundColor: '#1976D2',
    padding: 18,
    borderRadius: 12,
    alignItems: 'center',
    marginBottom: 30,
    elevation: 4,
  },
  loginButtonText: {
    fontSize: 18,
    fontWeight: 'bold',
    color: 'white',
  },
  responsibilitiesCard: {
    backgroundColor: 'white',
    padding: 16,
    borderRadius: 12,
    marginBottom: 20,
    elevation: 2,
  },
  responsibilitiesTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1976D2',
    marginBottom: 12,
  },
  responsibilityItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 12,
    paddingVertical: 4,
  },
  responsibilityIcon: {
    fontSize: 20,
    marginRight: 12,
  },
  responsibilityText: {
    fontSize: 14,
    color: '#1565C0',
    flex: 1,
    lineHeight: 18,
  },
  helpSection: {
    backgroundColor: 'white',
    padding: 16,
    borderRadius: 12,
    marginBottom: 20,
    elevation: 2,
  },
  helpTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#1976D2',
    marginBottom: 12,
  },
  helpButton: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    paddingHorizontal: 12,
    backgroundColor: '#E3F2FD',
    borderRadius: 8,
    marginBottom: 8,
  },
  helpEmoji: {
    fontSize: 20,
    marginRight: 12,
  },
  helpText: {
    fontSize: 14,
    color: '#1976D2',
    flex: 1,
  },
  footer: {
    alignItems: 'center',
    marginBottom: 30,
    paddingTop: 20,
  },
  footerText: {
    fontSize: 12,
    color: '#1565C0',
    textAlign: 'center',
    marginBottom: 4,
  },
  footerSubText: {
    fontSize: 11,
    color: '#1565C0',
    textAlign: 'center',
    opacity: 0.8,
  },
});

export default CRCLoginScreen;
