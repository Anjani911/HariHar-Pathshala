import React from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  SafeAreaView,
  Dimensions,
} from 'react-native';

const { width } = Dimensions.get('window');

interface DEOHomeScreenProps {
  onBack?: () => void;
}

const DEOHomeScreen: React.FC<DEOHomeScreenProps> = ({ onBack }) => {
  const districtStats = [
    { label: 'рдХреБрд▓ рдмреНрд▓реЙрдХ', value: '8', icon: 'ЁЯПЫя╕П' },
    { label: 'рдХреБрд▓ CRC', value: '120', icon: 'ЁЯУН' },
    { label: 'рдХреБрд▓ рд╕реНрдХреВрд▓', value: '1,408', icon: 'ЁЯПл' },
    { label: 'рдХреБрд▓ рдкреЗрдбрд╝', value: '41,920', icon: 'ЁЯМ│' },
  ];

  const blockPerformance = [
    { name: 'рд░рд╛рдпрдкреБрд░ рдмреНрд▓реЙрдХ-1', beo: 'рд╢реНрд░реА рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░', clusters: 15, performance: 88, trend: 'up' },
    { name: 'рдзрдорддрд░реА рдмреНрд▓реЙрдХ', beo: 'рд╢реНрд░реАрдорддреА рдкреНрд░рд┐рдпрд╛ рд╢рд░реНрдорд╛', clusters: 18, performance: 82, trend: 'up' },
    { name: 'рдЧрд░рд┐рдпрд╛рдмрдВрдж рдмреНрд▓реЙрдХ', beo: 'рд╢реНрд░реА рд╕реБрдиреАрд▓ рдЧреБрдкреНрддрд╛', clusters: 14, performance: 75, trend: 'stable' },
    { name: 'рдорд╣рд╛рд╕рдореБрдВрдж рдмреНрд▓реЙрдХ', beo: 'рд╢реНрд░реА рд╡рд┐рдХрд╛рд╕ рддрд┐рд╡рд╛рд░реА', clusters: 12, performance: 68, trend: 'down' },
    { name: 'рдмрд╛рд▓реЛрдж рдмреНрд▓реЙрдХ', beo: 'рд╢реНрд░реАрдорддреА рдЕрдиреАрддрд╛ рджреЗрд╡реА', clusters: 16, performance: 63, trend: 'down' },
  ];

  const getTrendIcon = (trend: string) => {
    switch (trend) {
      case 'up': return 'ЁЯУИ';
      case 'down': return 'ЁЯУЙ';
      default: return 'тЮбя╕П';
    }
  };

  const getPerformanceColor = (performance: number) => {
    if (performance >= 80) return '#4CAF50';
    if (performance >= 60) return '#FF9800';
    return '#F44336';
  };

  const quickActions = [
    { id: 'blocks', title: 'рдмреНрд▓реЙрдХ рдореЙрдирд┐рдЯрд░рд┐рдВрдЧ', icon: 'ЁЯПЫя╕П', color: '#FF5722' },
    { id: 'analytics', title: 'рдбреЗрдЯрд╛ рдПрдирд╛рд▓рд┐рдЯрд┐рдХреНрд╕', icon: 'ЁЯУК', color: '#3F51B5' },
    { id: 'reports', title: 'рдбрд┐рд╕реНрдЯреНрд░рд┐рдХреНрдЯ рд░рд┐рдкреЛрд░реНрдЯ', icon: 'ЁЯУЛ', color: '#4CAF50' },
    { id: 'meetings', title: 'рд╡реАрдбрд┐рдпреЛ рдХреЙрдиреНрдлреНрд░реЗрдВрд╕', icon: 'ЁЯОе', color: '#9C27B0' },
  ];

  const yearlyTargets = [
    { title: 'рдкреЗрдбрд╝ рд▓рдЧрд╛рдиреЗ рдХрд╛ рд▓рдХреНрд╖реНрдп', target: 50000, achieved: 41920, percentage: 84 },
    { title: 'рдЬреАрд╡рд┐рдд рд░рд╣рдиреЗ рдХреА рджрд░', target: 85, achieved: 78, percentage: 92 },
    { title: 'рд╕реНрдХреВрд▓ рдХрд╡рд░реЗрдЬ', target: 100, achieved: 95, percentage: 95 },
  ];

  const recentAchievements = [
    { title: 'рд░рд╛рдЬреНрдп рд╕реНрддрд░ рдкрд░ рдкреНрд░рдердо рд╕реНрдерд╛рди', description: 'рдкрд░реНрдпрд╛рд╡рд░рдг рд╕рдВрд░рдХреНрд╖рдг рдореЗрдВ', icon: 'ЁЯПЖ' },
    { title: '50,000+ рдкреЗрдбрд╝ рд▓рдЧрд╛рдП', description: 'рдЗрд╕ рд╢реИрдХреНрд╖рдгрд┐рдХ рд╡рд░реНрд╖ рдореЗрдВ', icon: 'ЁЯМ│' },
    { title: '95% рд╕реНрдХреВрд▓ рдХрд╡рд░реЗрдЬ', description: 'рдЬрд┐рд▓рд╛ рд╕реНрддрд░ рдкрд░ рд╣рд╛рд╕рд┐рд▓', icon: 'ЁЯОп' },
  ];

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Header */}
        <View style={styles.header}>
          {/* Back Button */}
          <TouchableOpacity style={styles.backButton} onPress={onBack}>
            <Text style={styles.backButtonText}>тЖР рд╡рд╛рдкрд╕</Text>
          </TouchableOpacity>
          
          <View style={styles.welcomeSection}>
            <Text style={styles.welcomeText}>рдирдорд╕реНрддреЗ DEO рдорд╣реЛрджрдп! ЁЯЩП</Text>
            <Text style={styles.subtitle}>District Education Officer</Text>
            <Text style={styles.districtInfo}>рд░рд╛рдпрдкреБрд░ рдЬрд┐рд▓рд╛</Text>
          </View>
        </View>

        {/* District Statistics */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯУК рдЬрд┐рд▓рд╛ рдЖрдВрдХрдбрд╝реЗ</Text>
          <View style={styles.statsGrid}>
            {districtStats.map((stat, index) => (
              <View key={index} style={styles.statCard}>
                <Text style={styles.statIcon}>{stat.icon}</Text>
                <Text style={styles.statValue}>{stat.value}</Text>
                <Text style={styles.statLabel}>{stat.label}</Text>
              </View>
            ))}
          </View>
        </View>

        {/* Quick Actions */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>тЪб рддреНрд╡рд░рд┐рдд рдХрд╛рд░реНрдп</Text>
          <View style={styles.actionsGrid}>
            {quickActions.map((action) => (
              <TouchableOpacity key={action.id} style={[styles.actionCard, { borderColor: action.color }]}>
                <View style={[styles.actionIcon, { backgroundColor: action.color }]}>
                  <Text style={styles.actionEmoji}>{action.icon}</Text>
                </View>
                <Text style={styles.actionTitle}>{action.title}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Yearly Targets */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯОп рд╡рд╛рд░реНрд╖рд┐рдХ рд▓рдХреНрд╖реНрдп</Text>
          <View style={styles.targetsContainer}>
            {yearlyTargets.map((target, index) => (
              <View key={index} style={styles.targetCard}>
                <Text style={styles.targetTitle}>{target.title}</Text>
                <View style={styles.targetProgress}>
                  <View style={styles.progressBarContainer}>
                    <View 
                      style={[
                        styles.progressBar, 
                        { width: `${target.percentage}%` }
                      ]} 
                    />
                  </View>
                  <Text style={styles.targetPercentage}>{target.percentage}%</Text>
                </View>
                <Text style={styles.targetNumbers}>
                  {target.achieved.toLocaleString()} / {target.target.toLocaleString()}
                </Text>
              </View>
            ))}
          </View>
        </View>

        {/* Block Performance */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯПЫя╕П рдмреНрд▓реЙрдХ рдкреНрд░рджрд░реНрд╢рди рд░реИрдВрдХрд┐рдВрдЧ</Text>
          <View style={styles.performanceContainer}>
            {blockPerformance.map((block, index) => (
              <TouchableOpacity key={index} style={styles.blockCard}>
                <View style={styles.rankBadge}>
                  <Text style={styles.rankText}>{index + 1}</Text>
                </View>
                <View style={styles.blockInfo}>
                  <Text style={styles.blockName}>{block.name}</Text>
                  <Text style={styles.beoName}>BEO: {block.beo}</Text>
                  <Text style={styles.clusterCount}>{block.clusters} рдХреНрд▓рд╕реНрдЯрд░</Text>
                </View>
                <View style={styles.performanceInfo}>
                  <View style={styles.performanceScore}>
                    <Text style={[styles.scoreText, { color: getPerformanceColor(block.performance) }]}>
                      {block.performance}%
                    </Text>
                    <Text style={styles.trendIcon}>{getTrendIcon(block.trend)}</Text>
                  </View>
                  <TouchableOpacity style={styles.detailButton}>
                    <Text style={styles.detailButtonText}>рд╡рд┐рд╕реНрддрд╛рд░ тЖТ</Text>
                  </TouchableOpacity>
                </View>
              </TouchableOpacity>
            ))}
          </View>
        </View>

        {/* Recent Achievements */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯПЖ рд╣рд╛рд▓ рдХреА рдЙрдкрд▓рдмреНрдзрд┐рдпрд╛рдВ</Text>
          <View style={styles.achievementsContainer}>
            {recentAchievements.map((achievement, index) => (
              <View key={index} style={styles.achievementCard}>
                <Text style={styles.achievementIcon}>{achievement.icon}</Text>
                <View style={styles.achievementContent}>
                  <Text style={styles.achievementTitle}>{achievement.title}</Text>
                  <Text style={styles.achievementDesc}>{achievement.description}</Text>
                </View>
              </View>
            ))}
          </View>
        </View>

        {/* Important Notices */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯУв рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕реВрдЪрдирд╛рдПрдВ</Text>
          <View style={styles.noticesContainer}>
            <View style={styles.noticeItem}>
              <Text style={styles.noticeIcon}>ЁЯЪи</Text>
              <View style={styles.noticeContent}>
                <Text style={styles.noticeTitle}>рд░рд╛рдЬреНрдп рд╕реНрддрд░реАрдп рдмреИрдардХ</Text>
                <Text style={styles.noticeDesc}>15 рдорд╛рд░реНрдЪ рдХреЛ рднреЛрдкрд╛рд▓ рдореЗрдВ рдорд╣рддреНрд╡рдкреВрд░реНрдг рдмреИрдардХ</Text>
                <Text style={styles.noticeTime}>рдХрд▓, 10:00 AM</Text>
              </View>
            </View>
            <View style={styles.noticeItem}>
              <Text style={styles.noticeIcon}>ЁЯУЛ</Text>
              <View style={styles.noticeContent}>
                <Text style={styles.noticeTitle}>рддреНрд░реИрдорд╛рд╕рд┐рдХ рд░рд┐рдкреЛрд░реНрдЯ рдЬрдорд╛ рдХрд░реЗрдВ</Text>
                <Text style={styles.noticeDesc}>рд╕рднреА BEO рд╕реЗ рд░рд┐рдкреЛрд░реНрдЯ рдХреА рд╕рдореАрдХреНрд╖рд╛ рдХрд░реЗрдВ</Text>
                <Text style={styles.noticeTime}>рдЕрдЧрд▓реЗ рд╕рдкреНрддрд╛рд╣ рддрдХ</Text>
              </View>
            </View>
            <View style={styles.noticeItem}>
              <Text style={styles.noticeIcon}>ЁЯМ▒</Text>
              <View style={styles.noticeContent}>
                <Text style={styles.noticeTitle}>рд╡реГрдХреНрд╖рд╛рд░реЛрдкрдг рдЕрднрд┐рдпрд╛рди</Text>
                <Text style={styles.noticeDesc}>рдорд╛рдирд╕реВрди рд╕реАрдЬрди рдХреА рддреИрдпрд╛рд░реА рд╢реБрд░реВ рдХрд░реЗрдВ</Text>
                <Text style={styles.noticeTime}>рдордИ 2024 рд╕реЗ</Text>
              </View>
            </View>
          </View>
        </View>

        {/* Monthly Analytics */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>ЁЯУИ рдорд╛рд╕рд┐рдХ рд╡рд┐рд╢реНрд▓реЗрд╖рдг</Text>
          <View style={styles.analyticsContainer}>
            <View style={styles.analyticsCard}>
              <Text style={styles.analyticsTitle}>рдкреЗрдбрд╝реЛрдВ рдХреА рдЬреАрд╡рд┐рдд рд░рд╣рдиреЗ рдХреА рджрд░</Text>
              <Text style={styles.analyticsValue}>78%</Text>
              <Text style={styles.analyticsChange}>+5% рдкрд┐рдЫрд▓реЗ рдорд╣реАрдиреЗ рд╕реЗ</Text>
            </View>
            <View style={styles.analyticsCard}>
              <Text style={styles.analyticsTitle}>рд╢рд┐рдХреНрд╖рдХ рд╕рд╣рднрд╛рдЧрд┐рддрд╛</Text>
              <Text style={styles.analyticsValue}>85%</Text>
              <Text style={styles.analyticsChange}>+2% рдкрд┐рдЫрд▓реЗ рдорд╣реАрдиреЗ рд╕реЗ</Text>
            </View>
            <View style={styles.analyticsCard}>
              <Text style={styles.analyticsTitle}>рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рджрд░</Text>
              <Text style={styles.analyticsValue}>92%</Text>
              <Text style={styles.analyticsChange}>+8% рдкрд┐рдЫрд▓реЗ рдорд╣реАрдиреЗ рд╕реЗ</Text>
            </View>
          </View>
        </View>

        <View style={styles.bottomSpace} />
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FFF8E1',
  },
  header: {
    backgroundColor: '#FF5722',
    paddingHorizontal: 20,
    paddingTop: 20,
    paddingBottom: 30,
    borderBottomLeftRadius: 25,
    borderBottomRightRadius: 25,
  },
  backButton: {
    alignSelf: 'flex-start',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    marginBottom: 15,
  },
  backButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: 'bold',
  },
  welcomeSection: {
    marginBottom: 10,
  },
  welcomeText: {
    fontSize: 22,
    fontWeight: 'bold',
    color: 'white',
    marginBottom: 5,
  },
  subtitle: {
    fontSize: 16,
    color: 'white',
    opacity: 0.9,
    marginBottom: 5,
  },
  districtInfo: {
    fontSize: 14,
    color: 'white',
    opacity: 0.8,
  },
  section: {
    paddingHorizontal: 20,
    marginTop: 25,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#E65100',
    marginBottom: 15,
  },
  statsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  statCard: {
    backgroundColor: 'white',
    width: (width - 60) / 2,
    padding: 15,
    borderRadius: 15,
    alignItems: 'center',
    marginBottom: 15,
    elevation: 3,
    borderWidth: 1,
    borderColor: '#FFCCBC',
  },
  statIcon: {
    fontSize: 30,
    marginBottom: 8,
  },
  statValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#E65100',
    marginBottom: 5,
  },
  statLabel: {
    fontSize: 12,
    color: '#666',
    textAlign: 'center',
  },
  actionsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  actionCard: {
    backgroundColor: 'white',
    width: (width - 60) / 2,
    padding: 15,
    borderRadius: 15,
    alignItems: 'center',
    marginBottom: 15,
    borderWidth: 2,
    elevation: 3,
  },
  actionIcon: {
    width: 50,
    height: 50,
    borderRadius: 25,
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 10,
  },
  actionEmoji: {
    fontSize: 22,
  },
  actionTitle: {
    fontSize: 13,
    fontWeight: 'bold',
    color: '#333',
    textAlign: 'center',
  },
  targetsContainer: {
    backgroundColor: 'white',
    borderRadius: 15,
    padding: 15,
    elevation: 2,
  },
  targetCard: {
    marginBottom: 15,
    paddingBottom: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  targetTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 8,
  },
  targetProgress: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5,
  },
  progressBarContainer: {
    flex: 1,
    height: 8,
    backgroundColor: '#F0F0F0',
    borderRadius: 4,
    marginRight: 10,
  },
  progressBar: {
    height: 8,
    backgroundColor: '#FF5722',
    borderRadius: 4,
  },
  targetPercentage: {
    fontSize: 12,
    fontWeight: 'bold',
    color: '#FF5722',
    minWidth: 35,
  },
  targetNumbers: {
    fontSize: 12,
    color: '#666',
  },
  performanceContainer: {
    backgroundColor: 'white',
    borderRadius: 15,
    padding: 10,
    elevation: 2,
  },
  blockCard: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  rankBadge: {
    width: 30,
    height: 30,
    borderRadius: 15,
    backgroundColor: '#FF5722',
    justifyContent: 'center',
    alignItems: 'center',
    marginRight: 15,
  },
  rankText: {
    fontSize: 14,
    fontWeight: 'bold',
    color: 'white',
  },
  blockInfo: {
    flex: 1,
  },
  blockName: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 3,
  },
  beoName: {
    fontSize: 12,
    color: '#666',
    marginBottom: 2,
  },
  clusterCount: {
    fontSize: 11,
    color: '#999',
  },
  performanceInfo: {
    alignItems: 'center',
  },
  performanceScore: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 5,
  },
  scoreText: {
    fontSize: 16,
    fontWeight: 'bold',
    marginRight: 5,
  },
  trendIcon: {
    fontSize: 14,
  },
  detailButton: {
    paddingHorizontal: 8,
    paddingVertical: 4,
  },
  detailButtonText: {
    fontSize: 11,
    color: '#E65100',
    fontWeight: 'bold',
  },
  achievementsContainer: {
    backgroundColor: 'white',
    borderRadius: 15,
    padding: 15,
    elevation: 2,
  },
  achievementCard: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  achievementIcon: {
    fontSize: 30,
    marginRight: 15,
  },
  achievementContent: {
    flex: 1,
  },
  achievementTitle: {
    fontSize: 15,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 3,
  },
  achievementDesc: {
    fontSize: 13,
    color: '#666',
  },
  noticesContainer: {
    backgroundColor: 'white',
    borderRadius: 15,
    padding: 15,
    elevation: 2,
  },
  noticeItem: {
    flexDirection: 'row',
    alignItems: 'flex-start',
    paddingVertical: 12,
    borderBottomWidth: 1,
    borderBottomColor: '#F0F0F0',
  },
  noticeIcon: {
    fontSize: 24,
    marginRight: 15,
    marginTop: 2,
  },
  noticeContent: {
    flex: 1,
  },
  noticeTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 3,
  },
  noticeDesc: {
    fontSize: 12,
    color: '#666',
    marginBottom: 5,
  },
  noticeTime: {
    fontSize: 11,
    color: '#FF5722',
    fontWeight: 'bold',
  },
  analyticsContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  analyticsCard: {
    backgroundColor: 'white',
    width: (width - 70) / 3,
    padding: 10,
    borderRadius: 12,
    alignItems: 'center',
    elevation: 2,
  },
  analyticsTitle: {
    fontSize: 11,
    color: '#666',
    textAlign: 'center',
    marginBottom: 5,
  },
  analyticsValue: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#E65100',
    marginBottom: 3,
  },
  analyticsChange: {
    fontSize: 9,
    color: '#4CAF50',
    textAlign: 'center',
  },
  bottomSpace: {
    height: 20,
  },
});

export default DEOHomeScreen;
