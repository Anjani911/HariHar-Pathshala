import React, { useState } from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  SafeAreaView,
  Alert,
  TextInput,
} from 'react-native';

interface SchoolStatusScreenProps {
  onBack?: () => void;
}

const SchoolStatusScreen: React.FC<SchoolStatusScreenProps> = ({ onBack }) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedFilter, setSelectedFilter] = useState('all');

  // Sample school data with upload status
  const schoolsData = [
    {
      id: 1,
      name: 'рд░рд╛рдЬрдХреАрдп рдкреНрд░рд╛рдердорд┐рдХ рд╢рд╛рд▓рд╛ рдЦреБрд░реНрд╕реАрдкрд╛рд░',
      udiseCode: '20140304501',
      block: 'рд░рд╛рдпрдкреБрд░',
      cluster: 'рдЦреБрд░реНрд╕реАрдкрд╛рд░',
      totalStudents: 85,
      uploadedPhotos: 78,
      pendingUploads: 7,
      uploadPercentage: 92,
      status: 'excellent',
      lastUpload: '2024-12-16 14:30',
      headTeacher: 'рд╢реНрд░реА рд░рд╛рдо рдХреБрдорд╛рд░ рд╢рд░реНрдорд╛',
      contactNumber: '9876543210',
    },
    {
      id: 2,
      name: 'рд░рд╛рдЬрдХреАрдп рдордзреНрдп рд╢рд╛рд▓рд╛ рджреЗрд╡рд░реА',
      udiseCode: '20140304502',
      block: 'рд░рд╛рдпрдкреБрд░',
      cluster: 'рджреЗрд╡рд░реА',
      totalStudents: 120,
      uploadedPhotos: 95,
      pendingUploads: 25,
      uploadPercentage: 79,
      status: 'good',
      lastUpload: '2024-12-16 13:15',
      headTeacher: 'рд╢реНрд░реАрдорддреА рд╕реБрдиреАрддрд╛ рджреЗрд╡реА',
      contactNumber: '9876543211',
    },
    {
      id: 3,
      name: 'рд░рд╛рдЬрдХреАрдп рдкреНрд░рд╛рдердорд┐рдХ рд╢рд╛рд▓рд╛ рд╕рд┐рдордЧрд╛',
      udiseCode: '20140304503',
      block: 'рднрд┐рд▓рд╛рдИ',
      cluster: 'рд╕рд┐рдордЧрд╛',
      totalStudents: 65,
      uploadedPhotos: 42,
      pendingUploads: 23,
      uploadPercentage: 65,
      status: 'average',
      lastUpload: '2024-12-16 11:45',
      headTeacher: 'рд╢реНрд░реА рдЕрдЬрдп рд╕рд┐рдВрд╣',
      contactNumber: '9876543212',
    },
    {
      id: 4,
      name: 'рд░рд╛рдЬрдХреАрдп рдЙрдЪреНрдЪ рдкреНрд░рд╛рдердорд┐рдХ рд╢рд╛рд▓рд╛ рдирд╛рдВрджрдЧрд╛рдВрд╡',
      udiseCode: '20140304504',
      block: 'рджреБрд░реНрдЧ',
      cluster: 'рдирд╛рдВрджрдЧрд╛рдВрд╡',
      totalStudents: 95,
      uploadedPhotos: 35,
      pendingUploads: 60,
      uploadPercentage: 37,
      status: 'poor',
      lastUpload: '2024-12-15 16:20',
      headTeacher: 'рд╢реНрд░реА рд╡рд┐рдХрд╛рд╕ рдЧреБрдкреНрддрд╛',
      contactNumber: '9876543213',
    },
    {
      id: 5,
      name: 'рд░рд╛рдЬрдХреАрдп рдкреНрд░рд╛рдердорд┐рдХ рд╢рд╛рд▓рд╛ рднрд┐рд▓рд╛рдИ',
      udiseCode: '20140304505',
      block: 'рдХреЛрд░рдмрд╛',
      cluster: 'рднрд┐рд▓рд╛рдИ',
      totalStudents: 78,
      uploadedPhotos: 15,
      pendingUploads: 63,
      uploadPercentage: 19,
      status: 'critical',
      lastUpload: '2024-12-14 09:30',
      headTeacher: 'рд╢реНрд░реАрдорддреА рдкреНрд░рд┐рдпрд╛ рдорд┐рд╢реНрд░рд╛',
      contactNumber: '9876543214',
    },
  ];

  const filterOptions = [
    { id: 'all', label: 'рд╕рднреА рд╕реНрдХреВрд▓', color: '#333' },
    { id: 'excellent', label: 'рдЙрддреНрдХреГрд╖реНрдЯ (90%+)', color: '#4CAF50' },
    { id: 'good', label: 'рдЕрдЪреНрдЫрд╛ (70-89%)', color: '#8BC34A' },
    { id: 'average', label: 'рдФрд╕рдд (50-69%)', color: '#FF9800' },
    { id: 'poor', label: 'рд╕реБрдзрд╛рд░ рдЪрд╛рд╣рд┐рдП (30-49%)', color: '#F44336' },
    { id: 'critical', label: 'рдЧрдВрднреАрд░ (<30%)', color: '#D32F2F' },
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'excellent': return '#4CAF50';
      case 'good': return '#8BC34A';
      case 'average': return '#FF9800';
      case 'poor': return '#F44336';
      case 'critical': return '#D32F2F';
      default: return '#666';
    }
  };

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'excellent': return 'ЁЯМЯ';
      case 'good': return 'ЁЯСН';
      case 'average': return 'ЁЯУК';
      case 'poor': return 'тЪая╕П';
      case 'critical': return 'ЁЯЪи';
      default: return 'тЭУ';
    }
  };

  const getStatusText = (percentage: number) => {
    if (percentage >= 90) return { status: 'excellent', text: 'рдЙрддреНрдХреГрд╖реНрдЯ' };
    if (percentage >= 70) return { status: 'good', text: 'рдЕрдЪреНрдЫрд╛' };
    if (percentage >= 50) return { status: 'average', text: 'рдФрд╕рдд' };
    if (percentage >= 30) return { status: 'poor', text: 'рд╕реБрдзрд╛рд░ рдЪрд╛рд╣рд┐рдП' };
    return { status: 'critical', text: 'рдЧрдВрднреАрд░ рд╕реНрдерд┐рддрд┐' };
  };

  const filteredSchools = schoolsData.filter((school) => {
    const matchesSearch = school.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
                         school.udiseCode.includes(searchQuery) ||
                         school.headTeacher.toLowerCase().includes(searchQuery.toLowerCase());
    
    if (selectedFilter === 'all') return matchesSearch;
    return matchesSearch && school.status === selectedFilter;
  });

  const handleContactSchool = (school: any) => {
    Alert.alert(
      'рд╕реНрдХреВрд▓ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ',
      `${school.name}\nрдкреНрд░рдзрд╛рди рд╢рд┐рдХреНрд╖рдХ: ${school.headTeacher}\nрдлреЛрди: ${school.contactNumber}`,
      [
        { text: 'рдХреЙрд▓ рдХрд░реЗрдВ', onPress: () => Alert.alert('рдХреЙрд▓', `рдХреЙрд▓ рдХрд┐рдпрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ: ${school.contactNumber}`) },
        { text: 'SMS рднреЗрдЬреЗрдВ', onPress: () => Alert.alert('SMS', 'рдЕрдиреБрд╕реНрдорд╛рд░рдХ SMS рднреЗрдЬрд╛ рдЧрдпрд╛') },
        { text: 'рдмрдВрдж рдХрд░реЗрдВ', style: 'cancel' },
      ]
    );
  };

  const renderSchoolCard = (school: any) => {
    const statusInfo = getStatusText(school.uploadPercentage);
    
    return (
      <View key={school.id} style={styles.schoolCard}>
        <View style={styles.cardHeader}>
          <View style={styles.schoolInfo}>
            <Text style={styles.schoolName}>{school.name}</Text>
            <Text style={styles.udiseCode}>UDISE: {school.udiseCode}</Text>
            <Text style={styles.locationInfo}>ЁЯУН {school.block} рдмреНрд▓реЙрдХ, {school.cluster} рдХреНрд▓рд╕реНрдЯрд░</Text>
          </View>
          <View style={[styles.statusBadge, { backgroundColor: getStatusColor(statusInfo.status) }]}>
            <Text style={styles.statusEmoji}>{getStatusIcon(statusInfo.status)}</Text>
            <Text style={styles.statusText}>{statusInfo.text}</Text>
          </View>
        </View>

        <View style={styles.progressSection}>
          <View style={styles.progressInfo}>
            <Text style={styles.progressLabel}>рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рдкреНрд░рдЧрддрд┐:</Text>
            <Text style={styles.progressStats}>
              {school.uploadedPhotos}/{school.totalStudents} рдЫрд╛рддреНрд░
            </Text>
          </View>
          <View style={styles.progressBar}>
            <View style={[styles.progressFill, { 
              width: `${school.uploadPercentage}%`,
              backgroundColor: getStatusColor(statusInfo.status)
            }]} />
          </View>
          <Text style={[styles.percentageText, { color: getStatusColor(statusInfo.status) }]}>
            {school.uploadPercentage}%
          </Text>
        </View>

        <View style={styles.detailsSection}>
          <View style={styles.detailRow}>
            <Text style={styles.detailLabel}>рдкреНрд░рдзрд╛рди рд╢рд┐рдХреНрд╖рдХ:</Text>
            <Text style={styles.detailValue}>{school.headTeacher}</Text>
          </View>
          <View style={styles.detailRow}>
            <Text style={styles.detailLabel}>рдЕрдВрддрд┐рдо рдЕрдкрд▓реЛрдб:</Text>
            <Text style={styles.detailValue}>{school.lastUpload}</Text>
          </View>
          <View style={styles.detailRow}>
            <Text style={styles.detailLabel}>рдмрдХрд╛рдпрд╛ рдлреЛрдЯреЛ:</Text>
            <Text style={[styles.detailValue, { 
              color: school.pendingUploads > 20 ? '#F44336' : '#4CAF50' 
            }]}>
              {school.pendingUploads} рдЫрд╛рддреНрд░
            </Text>
          </View>
        </View>

        <View style={styles.actionButtons}>
          <TouchableOpacity 
            style={[styles.actionButton, styles.contactButton]}
            onPress={() => handleContactSchool(school)}
          >
            <Text style={styles.actionButtonText}>ЁЯУЮ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ</Text>
          </TouchableOpacity>
          
          <TouchableOpacity style={[styles.actionButton, styles.detailsButton]}>
            <Text style={styles.actionButtonText}>ЁЯУК рд╡рд┐рд╕реНрддреГрдд рд░рд┐рдкреЛрд░реНрдЯ</Text>
          </TouchableOpacity>
        </View>
      </View>
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Header */}
        <View style={styles.header}>
          <TouchableOpacity style={styles.backButton} onPress={onBack}>
            <Text style={styles.backButtonText}>тЖР рд╡рд╛рдкрд╕</Text>
          </TouchableOpacity>
          
          <View style={styles.titleSection}>
            <Text style={styles.title}>ЁЯПл Har School ka Upload Status</Text>
            <Text style={styles.subtitle}>рд╕реНрдХреВрд▓-рд╡рд╛рд░ рдлреЛрдЯреЛ рдЕрдкрд▓реЛрдб рд╕реНрдерд┐рддрд┐</Text>
          </View>
        </View>

        {/* Search Bar */}
        <View style={styles.searchContainer}>
          <TextInput
            style={styles.searchInput}
            placeholder="рд╕реНрдХреВрд▓ рдХрд╛ рдирд╛рдо, UDISE рдХреЛрдб рдпрд╛ рдкреНрд░рдзрд╛рди рд╢рд┐рдХреНрд╖рдХ рдХрд╛ рдирд╛рдо рдЦреЛрдЬреЗрдВ..."
            value={searchQuery}
            onChangeText={setSearchQuery}
          />
        </View>

        {/* Filter Options */}
        <View style={styles.filterContainer}>
          <Text style={styles.filterTitle}>ЁЯУЛ рд╕реНрдерд┐рддрд┐ рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдлрд┐рд▓реНрдЯрд░ рдХрд░реЗрдВ:</Text>
          <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.filterScroll}>
            {filterOptions.map((filter) => (
              <TouchableOpacity
                key={filter.id}
                style={[
                  styles.filterButton,
                  selectedFilter === filter.id && styles.activeFilterButton,
                  { borderColor: filter.color }
                ]}
                onPress={() => setSelectedFilter(filter.id)}
              >
                <Text style={[
                  styles.filterButtonText,
                  selectedFilter === filter.id && { color: 'white' },
                  selectedFilter === filter.id && { backgroundColor: filter.color }
                ]}>
                  {filter.label}
                </Text>
              </TouchableOpacity>
            ))}
          </ScrollView>
        </View>

        {/* Results Summary */}
        <View style={styles.summaryContainer}>
          <Text style={styles.summaryText}>
            ЁЯУК рдХреБрд▓ рд╕реНрдХреВрд▓: {schoolsData.length} | рдлрд┐рд▓реНрдЯрд░ рдкрд░рд┐рдгрд╛рдо: {filteredSchools.length}
          </Text>
        </View>

        {/* Schools List */}
        <View style={styles.schoolsContainer}>
          {filteredSchools.length > 0 ? (
            filteredSchools.map(renderSchoolCard)
          ) : (
            <View style={styles.emptyState}>
              <Text style={styles.emptyIcon}>ЁЯФН</Text>
              <Text style={styles.emptyTitle}>рдХреЛрдИ рд╕реНрдХреВрд▓ рдирд╣реАрдВ рдорд┐рд▓рд╛</Text>
              <Text style={styles.emptyText}>
                рдХреГрдкрдпрд╛ рдЕрд▓рдЧ рдлрд┐рд▓реНрдЯрд░ рдпрд╛ рдЦреЛрдЬ рд╢рдмреНрдж рдХрд╛ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВ
              </Text>
            </View>
          )}
        </View>

        <View style={styles.bottomSpace} />
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F3E5F5',
  },
  header: {
    backgroundColor: '#9C27B0',
    paddingHorizontal: 20,
    paddingTop: 20,
    paddingBottom: 30,
    borderBottomLeftRadius: 25,
    borderBottomRightRadius: 25,
  },
  backButton: {
    alignSelf: 'flex-start',
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 20,
    backgroundColor: 'rgba(255, 255, 255, 0.2)',
    marginBottom: 15,
  },
  backButtonText: {
    color: 'white',
    fontSize: 14,
    fontWeight: 'bold',
  },
  titleSection: {
    alignItems: 'center',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    color: 'white',
    marginBottom: 5,
  },
  subtitle: {
    fontSize: 14,
    color: 'white',
    opacity: 0.9,
  },
  searchContainer: {
    paddingHorizontal: 20,
    paddingTop: 20,
    paddingBottom: 10,
  },
  searchInput: {
    backgroundColor: 'white',
    paddingHorizontal: 15,
    paddingVertical: 12,
    borderRadius: 25,
    fontSize: 14,
    elevation: 2,
  },
  filterContainer: {
    paddingHorizontal: 20,
    marginBottom: 10,
  },
  filterTitle: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 10,
  },
  filterScroll: {
    flexDirection: 'row',
  },
  filterButton: {
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 15,
    backgroundColor: 'white',
    marginRight: 8,
    borderWidth: 1,
    elevation: 1,
  },
  activeFilterButton: {
    backgroundColor: '#9C27B0',
  },
  filterButtonText: {
    fontSize: 11,
    color: '#666',
    fontWeight: '500',
  },
  summaryContainer: {
    paddingHorizontal: 20,
    paddingVertical: 10,
  },
  summaryText: {
    fontSize: 14,
    color: '#666',
    fontWeight: 'bold',
    textAlign: 'center',
  },
  schoolsContainer: {
    paddingHorizontal: 20,
  },
  schoolCard: {
    backgroundColor: 'white',
    borderRadius: 15,
    marginBottom: 15,
    elevation: 3,
    overflow: 'hidden',
  },
  cardHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    backgroundColor: '#F8F9FA',
    padding: 15,
  },
  schoolInfo: {
    flex: 1,
    marginRight: 10,
  },
  schoolName: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 3,
  },
  udiseCode: {
    fontSize: 12,
    color: '#666',
    marginBottom: 2,
  },
  locationInfo: {
    fontSize: 12,
    color: '#666',
  },
  statusBadge: {
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 12,
    alignItems: 'center',
    minWidth: 60,
  },
  statusEmoji: {
    fontSize: 16,
    marginBottom: 2,
  },
  statusText: {
    color: 'white',
    fontSize: 9,
    fontWeight: 'bold',
    textAlign: 'center',
  },
  progressSection: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingHorizontal: 15,
    paddingVertical: 10,
    backgroundColor: '#FAFAFA',
  },
  progressInfo: {
    flex: 1,
  },
  progressLabel: {
    fontSize: 12,
    color: '#666',
    marginBottom: 2,
  },
  progressStats: {
    fontSize: 14,
    fontWeight: 'bold',
    color: '#333',
  },
  progressBar: {
    width: 80,
    height: 6,
    backgroundColor: '#E0E0E0',
    borderRadius: 3,
    marginHorizontal: 10,
  },
  progressFill: {
    height: '100%',
    borderRadius: 3,
  },
  percentageText: {
    fontSize: 14,
    fontWeight: 'bold',
    minWidth: 40,
  },
  detailsSection: {
    padding: 15,
  },
  detailRow: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 5,
  },
  detailLabel: {
    fontSize: 13,
    color: '#666',
    flex: 1,
  },
  detailValue: {
    fontSize: 13,
    fontWeight: 'bold',
    color: '#333',
    flex: 1,
    textAlign: 'right',
  },
  actionButtons: {
    flexDirection: 'row',
    borderTopWidth: 1,
    borderTopColor: '#F0F0F0',
  },
  actionButton: {
    flex: 1,
    paddingVertical: 12,
    alignItems: 'center',
    justifyContent: 'center',
  },
  contactButton: {
    backgroundColor: '#4CAF50',
  },
  detailsButton: {
    backgroundColor: '#2196F3',
    borderLeftWidth: 1,
    borderLeftColor: '#F0F0F0',
  },
  actionButtonText: {
    color: 'white',
    fontSize: 13,
    fontWeight: 'bold',
  },
  emptyState: {
    alignItems: 'center',
    paddingVertical: 50,
    paddingHorizontal: 20,
  },
  emptyIcon: {
    fontSize: 60,
    marginBottom: 15,
  },
  emptyTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#333',
    marginBottom: 5,
  },
  emptyText: {
    fontSize: 14,
    color: '#666',
    textAlign: 'center',
  },
  bottomSpace: {
    height: 20,
  },
});

export default SchoolStatusScreen;
